<?php

    if(php_sapi_name() !== 'cli') {
        echo 'Error: This CLI must be run with the PHP CLI';
        exit();
    }

    use classes\Application;

    require __DIR__ . DIRECTORY_SEPARATOR . '..' . DIRECTORY_SEPARATOR . 'autoloader.php';

    $app = new Application();

    $app->register(new \commands\Help);
    $app->register(new \commands\Listing);
    $app->register(new \commands\Completion);

    $app->register(new \commands\show\Modules);

    $app->register(new \commands\make\Service);
    $app->register(new \commands\make\Controller);
    $app->register(new \commands\make\Adapter);
    $app->register(new \commands\make\Job);
    $app->register(new \commands\make\Router);
    $app->register(new \commands\make\Module);
    $app->register(new \commands\make\Form);

    $app->register(new \commands\install\Module);
    $app->register(new \commands\install\Ui);
    $app->register(new \commands\install\Cli);
    $app->register(new \commands\install\Completion);

    $app->register(new \commands\upgrade\Core);
    $app->register(new \commands\upgrade\Ui);
    $app->register(new \commands\upgrade\Cli);
    $app->register(new \commands\upgrade\Dependencies);

    $app->register(new \commands\run\Audit);
    $app->register(new \commands\run\Migrations);
    $app->register(new \commands\run\Scheduler);
    $app->register(new \commands\run\Tests);

    $app->register(new \commands\ansible\Setup);
    $app->register(new \commands\ansible\Ping);
    $app->register(new \commands\ansible\Provision);
    $app->register(new \commands\ansible\Domain);
    $app->register(new \commands\ansible\Deploy);
    $app->register(new \commands\ansible\Publish);
    $app->register(new \commands\ansible\Rollback);

    $app->process($argv);
